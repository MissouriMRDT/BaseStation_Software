/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 assets/nodess/rover_preview.glb -o src/Core/components/RoverScene.tsx 
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import path from 'path';
import { useGLTF, useAnimations, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

const MODELS_PATH = path.join(__dirname, '../assets/models');
const ROVER_FILE = path.join(MODELS_PATH, 'rover_preview.glb');
const TEXTURE_FILE = path.join(MODELS_PATH, 'tex01.png');

type GLTFResult = GLTF & {
  nodes: {
    Rover001: THREE.Mesh
    Rover004: THREE.Mesh
    Rover003: THREE.Mesh
    Rover002: THREE.Mesh
    Rover005: THREE.Mesh
    Rover006: THREE.Mesh
    Hyperion_1: THREE.Mesh
    Hyperion001: THREE.Mesh
    Hyperion002: THREE.Mesh
    Sphere: THREE.Mesh
    leftArm: THREE.SkinnedMesh
    leftLeg: THREE.SkinnedMesh
    rightLeg: THREE.SkinnedMesh
    rightArm: THREE.SkinnedMesh
    Bone: THREE.Bone
  }
  materials: {
    roverWheel: THREE.MeshStandardMaterial
    roverFrame: THREE.MeshStandardMaterial
    will: THREE.MeshStandardMaterial
    human: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ActionName = 'skeletonAction'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh'] | JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

export function RoverScene(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF(ROVER_FILE) as GLTFResult
  materials.will.map = useTexture(TEXTURE_FILE)
  materials.will.map.flipY = false;
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    actions.skeletonAction?.play();
  });
  Object.values(nodes).forEach((node) => node.castShadow = true)
  //console.log(nodes, materials, animations, actions)

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="skeleton">
          <primitive object={nodes.Bone}>
            <skinnedMesh name="leftArm" geometry={nodes.leftArm.geometry} material={materials.human} skeleton={nodes.leftArm.skeleton} castShadow />
            <skinnedMesh name="leftLeg" geometry={nodes.leftLeg.geometry} material={materials.human} skeleton={nodes.leftLeg.skeleton} castShadow />
            <skinnedMesh name="rightLeg" geometry={nodes.rightLeg.geometry} material={materials.human} skeleton={nodes.rightLeg.skeleton} castShadow />
            <skinnedMesh name="rightArm" geometry={nodes.rightArm.geometry} material={materials.human} skeleton={nodes.rightArm.skeleton} castShadow />
          </primitive>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(ROVER_FILE)
